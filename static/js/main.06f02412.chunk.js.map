{"version":3,"sources":["components/Card.js","Assets/Spinner.gif","components/LoadingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Card","item","className","first_name","last_name","email","src","avatar","alt","id","LoadingScreen","Spinner","App","useState","ApiData","setApiData","totalPageCount","setTotalPageCount","page","setpage","isLoading","setIsLoading","useEffect","fetch","then","response","json","result","data","total_pages","console","log","map","Pagination","count","color","size","onChange","event","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAiBeA,MAff,YAAyB,IAATC,EAAQ,EAARA,KACd,OACE,sBAEEC,UAAU,mEAFZ,UAIE,yCAAQD,EAAKE,WAAb,aAA4BF,EAAKG,WAAjC,OACA,yCAAYH,EAAKI,SACjB,qBAAKC,IAAKL,EAAKM,OAAQC,IAAI,GAAGN,UAAU,sBACxC,uBACA,yBAPKD,EAAKQ,KCLD,MAA0B,oCCW1BC,MARf,WACE,OACE,qBAAKR,UAAU,0EAAf,SACE,qBAAKI,IAAKK,EAASH,IAAI,GAAGN,UAAU,mBC8C3BU,MA7Cf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,qBAAU,WACRC,MAAM,oCAAD,OAAqCL,IAAQM,MAAK,SAACC,GACtDJ,GAAa,GACbI,EAASC,OAAOF,MAAK,SAACG,GACpBN,GAAa,GACbN,EAAWY,EAAOC,MAClBX,EAAkBU,EAAOE,aACzBC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIJ,EAAOE,qBAGtB,CAACX,IAGF,mCACGE,EACC,cAAC,EAAD,IAEA,sBAAKlB,UAAU,kFAAf,UACE,qBAAKA,UAAU,cAAf,SACGY,EAAQkB,KAAI,SAAC/B,GAAD,OACX,cAAC,EAAD,CAAMA,KAAMA,GAAWA,QAI3B,qBAAKC,UAAU,UAAf,SACE,cAAC+B,EAAA,EAAD,CACEC,MAAOlB,EACPmB,MAAM,UACNC,KAAK,QACLC,SAAU,SAACC,EAAOC,GAAR,OAAkBpB,EAAQoB,cC/BnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.06f02412.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Card({ item }) {\r\n  return (\r\n    <div\r\n      key={item.id}\r\n      className=\"card-outer-wrapper pt-5 pb-3 px-3 my-5 mx-auto position-relative\"\r\n    >\r\n      <h3>{`${item.first_name}  ${item.last_name}`} </h3>\r\n      <h6>Email: {item.email}</h6>\r\n      <img src={item.avatar} alt=\"\" className=\"position-absolute\" />\r\n      <br />\r\n      <h1></h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/Spinner.6f75c712.gif\";","import React from \"react\";\r\nimport Spinner from \"../Assets/Spinner.gif\";\r\n\r\nfunction LoadingScreen() {\r\n  return (\r\n    <div className=\"loading-screen-wrapper d-flex justify-content-center align-items-center\">\r\n      <img src={Spinner} alt=\"\" className=\"loading-gif\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Card from \"./components/Card\";\nimport LoadingScreen from \"./components/LoadingScreen\";\n\nfunction App() {\n  const [ApiData, setApiData] = useState([]);\n  const [totalPageCount, setTotalPageCount] = useState(1);\n  const [page, setpage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetch(`https://reqres.in/api/users?page=${page}`).then((response) => {\n      setIsLoading(true);\n      response.json().then((result) => {\n        setIsLoading(false);\n        setApiData(result.data);\n        setTotalPageCount(result.total_pages);\n        console.log(result);\n        console.log(result.total_pages);\n      });\n    });\n  }, [page]);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingScreen />\n      ) : (\n        <div className=\"container-fluid text-center mx-auto mt-5 d-flex flex-column main-outer-wrapper \">\n          <div className=\"row mx-auto\">\n            {ApiData.map((item) => (\n              <Card item={item} key={item} />\n            ))}\n          </div>\n\n          <div className=\"mx-auto\">\n            <Pagination\n              count={totalPageCount}\n              color=\"primary\"\n              size=\"large\"\n              onChange={(event, value) => setpage(value)}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}